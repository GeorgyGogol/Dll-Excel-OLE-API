/**
 * @defgroup Abstract Абстрактные объекты
 * @brief Абстракции, служебные классы
 * 
 * Тут собраны все классы, которые являются абстрактной, базовой
 * состовляющей. Не предназначены для создания, используются для наследования.
 * @{
 * 
 * @defgroup Templates Шаблоны
 * @brief Шаблоны классов
 * 
 * Так же являются абстракциями. Служат основой для наследования от TExcelObject.
 * Такой путь избран для того, чтобы методы возвращали указатель на самих себя и
 * была возможность выстраивать взаимодействие с объектом по цепочке команд, а не
 * постоянно обращаться к указателю.
 * 
 * Суть шаблонов - приводить возвращаемый указатель из общих методов базового класса
 * к классу наследника.
 * 
 * @code
 * TExcelSheet *sheet = eBook->GetCurrentSheet();
 * 
 * // Позволяет делать так:
 * sheet->SetName("Simple")->Show()->InsertDataSet(1, 1, dataSet);
 * 
 * // Вместо такого:
 * sheet->SetName("Simple");
 * sheet->Show();
 * sheet->InsertDataSet(1, 1, dataSet);
 * @endcode
 * 
 * Первый вариант хорош для клиентского кода. Второй - для отладки.
 * 
 * <h3>Не призываю везде и повсеместно использовать первый метод!</h3>
 * @{
 * @}
 * 
 * @}
 */

/** @defgroup Enums Перечисления
 * @brief Используемые перечисления (+ свои, кастомные)
 * 
 * Сборник перечислений
 * @{
 * @}
 */

/**
 * @defgroup ExcelObjects Объекты Экселя
 * @brief Проекция в мир С++ определенного объекта из мира Excel
 * 
 * Классы, отвечающие за тот или иной объект.
 * 
 * @{
 * @}
 */

