#ifndef uTExcelEnumsH
#define uTExcelEnumsH
/** @file 
 * @brief Мастер-файл перечислений
 * @ingroup Enums
 * 
 * Сборник всех возможных перечислений, которые используются для работы. 
 * Правильным образом включает все перечисления, так что подключать нужно 
 * именно его, чтобы не попасть в неприятную ситуацию в стиле:
 * @code
 * void exl::AbstractClass::AbstractMethod(ExcelEnum e); // Ошибка: ExcelEnum не найден
 * @endcode
 * Т.к. ExcelEnum должен находится в пространстве имен exl.
 * 
 * Существует миф, рассказывают легенды, призрак коммунизма ходит по Европе, 
 * что перечисления вроде как можно найти и получить от самого Экселя, но 
 * проще было сделать свои перечисления и не заморациваться с отдельным 
 * классом для перечислений. Текущая реализация не требует обращение к экселю
 *  "мне нужно вот такое перечисление", а сразу имеет на понятном языке, что
 * есть.
 */

//---------------------------------------------------------------------------
namespace exl {
/** @defgroup Enums Перечисления
 * @brief Используемые перечисления (+ свои, кастомные)
 * 
 * Сборник перечислений
 * @{
 */

/// Включение пивотных настроек
#include "uEPivots.h"

/// Включение настроек форматирования
#include "uEFormats.h"

/// Включение типов границ (линий)
#include "uEBorders.h"

/// Направление для заполнения (?)
/// @details Направление заполнения ячеек как при перетаскивании...
enum class FillDirection : char {
	Down = 0, 		/// Вниз
	Up,				/// Вверх
	Left, 			/// Лево
	Right 			/// Право
};

const short int xlNone = -4142;
/// @}

}

//---------------------------------------------------------------------------
#endif  // uTExcelEnumsH

