#ifndef uTExcelExceptionsH
#define uTExcelExceptionsH
/** @file 
 * @ingroup Exceptions
 * @brief Базовое исключение
 * @details Самый первый предок, породивший всех остальных.
 */

/** -------------------------------------------------------------------------
 * @defgroup Exceptions Исключения
 * @brief Ошибки-ачивки, выпадающие во время работы
 * @details Группа классов ошибок, выполняющие необходимые действия в случае
 * возникновения нарушений или сбоев при работе с библиотекой. Наследуются от
 * Билдеровского класса Exception.
 *
 * @{
 * @}
 *
 * ---------------------------------------------------------------------- **/

#include "uDll.h"
/** -------------------------------------------------------------------------
 * @brief Базовый класс исключений
 * @ingroup Exceptions
 * 
 * Содержит все извращения, которые нужны для генерации и фиксирования этой
 * вашей исключительной ситуации.
 *
 * Если в процессе возникает ошибка, до сброс через этот класс _правильным_
 * образом сформирует сообщение об ошибке, запишет его в лог, и, самое
 * главное, будет доступен для отлова извне, так как является наследником
 * класса Exception (наследуется от TObject, хотя мне казалось, что я видел
 * наследование от std::exception).
 *
 * @note Основные методы перегружены для работы и как с обычными const char *
 * так и для работы с билдеровскими строками.
 *
 * ---------------------------------------------------------------------- **/
class ExcelException : public Exception
{
public:
	ExcelException(const String& message);
	ExcelException(const char* message);

protected:
	ExcelException(const String& classWhere, const String& method, const String& message);
	ExcelException(const char* classWhere, const char* method, const char* message);

private:
    /// @brief Служебная: записать сообщение в лог
	void WriteError(const String& error);

};

//---------------------------------------------------------------------------
#endif

